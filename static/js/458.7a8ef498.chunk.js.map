{"version":3,"file":"static/js/458.7a8ef498.chunk.js","mappings":"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","sources":["webpack://smart_finance/./src/Components/balance/_balance.module.scss?31a0","Components/balance/Balance.js","redux/transactions/transaction-operations.js","redux/transactions/transaction-selectors.js","Components/transactions/form/categoriesList.js","webpack://smart_finance/./src/Components/transactions/form/_form.module.scss?3282","Components/transactions/form/Form.js","webpack://smart_finance/./src/Components/transactions/summary/_summary.module.scss?ff14","Components/transactions/summary/Summary.js","webpack://smart_finance/./src/Components/transactions/transactionsView/_transactionsView.module.scss?8135","Components/transactions/transactionsView/TransactionsView.js","webpack://smart_finance/./src/Components/transactions/transactionsPage/_transactionsPage.module.scss?44f9","Components/transactions/transactionsPage/TransactionsPage.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"formBalance\":\"_balance_formBalance__1+4gv\",\"input\":\"_balance_input__DgSyp\",\"btn\":\"_balance_btn__7RO-D\",\"label\":\"_balance_label__8VxD-\",\"inputBox\":\"_balance_inputBox__xsFEr\"};","import { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\n\nimport Toastify from 'toastify-js';\nimport 'toastify-js/src/toastify.css';\nimport { updateBalanceSuccess } from '../../helpers/toastifyOptions';\n\nimport { getUserId, getBalance } from '../../redux/user/user-selectors';\nimport { updateBalance } from '../../redux/user/user-operations';\n\nimport s from './_balance.module.scss';\n\nfunction Balance({ userId, sendData, currentBalance }) {\n  const [balance, setBalance] = useState(currentBalance);\n\n  const handleChange = event => {\n    setBalance(event.target.value);\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const data = { id: userId, balance: balance };\n    await sendData(data);\n    Toastify(updateBalanceSuccess).showToast();\n  };\n\n  useEffect(() => {\n    setBalance(currentBalance);\n  }, [currentBalance]);\n\n  return (\n    <form className={s.formBalance} onSubmit={handleSubmit}>\n      <label className={s.label}>Balance:</label>\n      <div className={s.inputBox}>\n        <input\n          className={s.input}\n          name=\"balance\"\n          value={balance}\n          placeholder=\"Balance\"\n          onChange={handleChange}\n        />\n        <button className={s.btn}>CONFIRM</button>\n      </div>\n    </form>\n  );\n}\n\nconst mapStateToProps = state => ({\n  userId: getUserId(state),\n  currentBalance: getBalance(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  sendData: data => {\n    return dispatch(updateBalance(data));\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Balance);\n","import axios from 'axios';\nimport {\n  addExpenseRequest,\n  addExpenseSuccess,\n  addExpenseError,\n  addIncomeRequest,\n  addIncomeSuccess,\n  addIncomeError,\n  fetchTransactionsRequest,\n  fetchTransactionsSuccess,\n  fetchTransactionsError,\n  deleteExpenseRequest,\n  deleteExpenseSuccess,\n  deleteExpenseError,\n  deleteIncomeRequest,\n  deleteIncomeSuccess,\n  deleteIncomeError,\n  fetchSummaryRequest,\n  fetchSummarySuccess,\n  fetchSummaryError,\n} from './transaction-actions';\n\naxios.defaults.baseURL = 'https://sfbackend-1-q4339617.deta.app/';\n\nconst addTransactionExpense = data => dispatch => {\n  dispatch(addExpenseRequest());\n\n  const transaction = {\n    description: data.description,\n    category: data.category[0],\n    amount: Number(data.amount),\n    date: data.date,\n  };\n\n  return axios\n    .post('api/transactions/expense', transaction)\n    .then(({ data }) => {\n      return dispatch(addExpenseSuccess(data));\n    })\n    .catch(error => dispatch(addExpenseError(error)));\n};\n\n//>>>>>>>>>>>>>>>>>>>>>>>>>>>>\n\nconst addTransactionIncome = data => dispatch => {\n  dispatch(addIncomeRequest());\n\n  const transaction = {\n    description: data.description,\n    category: data.category[0],\n    amount: Number(data.amount),\n    date: data.date,\n  };\n\n  return axios\n    .post('api/transactions/income', transaction)\n    .then(({ data }) => {\n      return dispatch(addIncomeSuccess(data));\n    })\n    .catch(error => dispatch(addIncomeError(error)));\n};\n\n//>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\n\nconst fetchTransactions = () => async dispatch => {\n  dispatch(fetchTransactionsRequest());\n\n  await axios\n    .get('api/transactions/')\n    .then(({ data }) => dispatch(fetchTransactionsSuccess(data)))\n    .catch(error => dispatch(fetchTransactionsError(error)));\n};\n\n//>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\n\nconst fetchSummaryList = () => async dispatch => {\n  dispatch(fetchSummaryRequest());\n\n  await axios\n    .get('api/transactions/summary')\n    .then(({ data }) => dispatch(fetchSummarySuccess(data)))\n    .catch(error => dispatch(fetchSummaryError(error)));\n};\n\n//>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\n\nconst deleteExpense = id => dispatch => {\n  dispatch(deleteExpenseRequest());\n\n  axios\n    .delete(`api/transactions/${id}`)\n    .then(({ data }) => dispatch(deleteExpenseSuccess(data)))\n    .catch(error => dispatch(deleteExpenseError(error)));\n};\n\nconst deleteIncome = id => dispatch => {\n  dispatch(deleteIncomeRequest());\n\n  axios\n    .delete(`api/transactions/${id}`)\n    .then(({ data }) => dispatch(deleteIncomeSuccess(data)))\n    .catch(error => dispatch(deleteIncomeError(error)));\n};\n\nexport {\n  addTransactionExpense,\n  addTransactionIncome,\n  fetchTransactions,\n  deleteExpense,\n  deleteIncome,\n  fetchSummaryList,\n};\n","const getExpenses = state => state.transactions.expenses;\r\nconst getIncomes = state => state.transactions.incomes;\r\nconst getSummaryExpenses = state => state.transactions.summaryExpenses;\r\nconst getSummaryIncomes = state => state.transactions.summaryIncomes;\r\n\r\nexport { getExpenses, getIncomes, getSummaryExpenses, getSummaryIncomes };\r\n","const expensesList = [\n  'Products',\n  'Transport',\n  'Health',\n  'Alcohol',\n  'Home',\n  'Entertainment',\n  'Technics',\n  'Public Utilities, connection',\n  'Sports, hobbies',\n  'Education',\n  'Other',\n];\n\nconst incomesList = ['Salary', 'Additional income'];\n\nexport { expensesList, incomesList };\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"_form_input__2T4TK\",\"date\":\"_form_date__b940B\",\"description\":\"_form_description__TTm0c\",\"dropdownMenu\":\"_form_dropdownMenu__-zKRB\",\"amount\":\"_form_amount__ikWEa\",\"select\":\"_form_select__IWMBt\",\"option\":\"_form_option__rTE9V\",\"btn\":\"_form_btn__lylht\",\"form\":\"_form_form__nv3oO\",\"inputsBox\":\"_form_inputsBox__ST7TG\",\"dateInput\":\"_form_dateInput__uAn+x\",\"menuTitle\":\"_form_menuTitle__kFfVr\",\"btnContainer\":\"_form_btnContainer__JmUbN\"};","import { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\nimport {\n  addTransactionExpense,\n  addTransactionIncome,\n} from '../../../redux/transactions/transaction-operations';\n\nimport { AdapterDateFns } from '@mui/x-date-pickers/AdapterDateFns';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\nimport { expensesList, incomesList } from './categoriesList';\nimport { Box } from '@mui/system';\n\nimport s from './_form.module.scss';\n\n//........................................................................\n\nfunction TransactionForm({ sendDataExpense, sendDataIncome }) {\n  const [description, setDescription] = useState('');\n  const [category, setCategory] = useState(['Choose category']);\n  const [amount, setAmount] = useState('');\n  const [date, setDate] = useState(null);\n\n  const location = useLocation();\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n\n    switch (name) {\n      case 'description':\n        setDescription(value);\n        break;\n      case 'category':\n        setCategory([value]);\n        break;\n      case 'amount':\n        setAmount(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const submitForm = async event => {\n    event.preventDefault();\n\n    const data = await {\n      category,\n      description,\n      amount,\n      date,\n    };\n\n    if (location.pathname === '/transactions/expenses') {\n      await sendDataExpense(data);\n    } else await sendDataIncome(data);\n\n    clearForm();\n  };\n\n  const clearForm = () => {\n    setDescription('');\n    setCategory(['Choose category']);\n    setAmount('');\n    setDate(null);\n    return;\n  };\n\n  return (\n    <form onSubmit={submitForm} className={s.form}>\n      <div className={s.inputsBox}>\n        <LocalizationProvider dateAdapter={AdapterDateFns}>\n          <Box className={s.box1}>\n            <DatePicker\n              label=\"Custom input\"\n              value={date}\n              onChange={newValue => {\n                setDate(newValue);\n              }}\n              className={s.datePicker}\n              renderInput={({ inputRef, inputProps, InputProps }) => (\n                <Box\n                  className={s.date}\n                  sx={{ display: 'flex', alignItems: 'center' }}\n                >\n                  <input\n                    ref={inputRef}\n                    {...inputProps}\n                    className={s.dateInput}\n                    required\n                  />\n                  {InputProps?.endAdornment}\n                </Box>\n              )}\n            />\n          </Box>\n        </LocalizationProvider>\n\n        <input\n          type=\"text\"\n          className={s.description}\n          label=\"Description\"\n          placeholder=\"Description\"\n          value={description}\n          onChange={handleChange}\n          name=\"description\"\n          autoComplete=\"none\"\n          maxLength={30}\n        />\n\n        <div className={s.dropdownMenu}>\n          <h3 className={s.menuTitle}>{category}</h3>\n          {location.pathname === '/transactions/expenses' ? (\n            <select\n              multiple\n              value={category}\n              label=\"Category\"\n              name=\"category\"\n              onChange={handleChange}\n              className={s.select}\n            >\n              {expensesList.map(el => (\n                <option key={el} value={el} className={s.option}>\n                  {el}\n                </option>\n              ))}\n            </select>\n          ) : (\n            <select\n              multiple\n              value={category}\n              label=\"Category\"\n              name=\"category\"\n              onChange={handleChange}\n              className={s.select}\n            >\n              {incomesList.map(el => (\n                <option key={el} value={el} className={s.option}>\n                  {el}\n                </option>\n              ))}\n            </select>\n          )}\n        </div>\n\n        <input\n          required\n          name=\"amount\"\n          type=\"number\"\n          placeholder=\"0.00\"\n          label=\"Amount\"\n          value={amount}\n          onChange={handleChange}\n          className={s.amount}\n        />\n      </div>\n\n      <div className={s.btnContainer}>\n        <button type=\"submit\" className={s.btn}>\n          <span>ENTER</span>\n        </button>\n        <button type=\"button\" onClick={() => clearForm()} className={s.btn}>\n          <span>CLEAR</span>\n        </button>\n      </div>\n    </form>\n  );\n}\n\nconst mapDispatchToProps = dispatch => ({\n  sendDataExpense: data => {\n    return dispatch(addTransactionExpense(data));\n  },\n  sendDataIncome: data => {\n    return dispatch(addTransactionIncome(data));\n  },\n});\n\nexport default connect(null, mapDispatchToProps)(TransactionForm);\n","// extracted by mini-css-extract-plugin\nexport default {\"summaryContainer\":\"_summary_summaryContainer__RofMV\",\"btnNext\":\"_summary_btnNext__vfATz\",\"item\":\"_summary_item__dbc8X\",\"transactionTypeBox\":\"_summary_transactionTypeBox__dRD7b\",\"textYear\":\"_summary_textYear__Y-amg\",\"spanAmount\":\"_summary_spanAmount__MlT3T\"};","import { useLocation } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport SvgGenerator from '../../svg-generator/SvgGenerator';\nimport {\n  getSummaryExpenses,\n  getSummaryIncomes,\n} from '../../../redux/transactions/transaction-selectors';\nimport s from './_summary.module.scss';\n\nlet selectedIndex = 0;\n\nfunction Summary({ data }) {\n  const [yearsList, setYearsList] = useState(data.map(el => el[0]));\n  const [currentYear, setCurrentYear] = useState(yearsList[0]);\n  const [items, setItems] = useState(data[0][1]);\n\n  const location = useLocation();\n\n  //...........................................................................................\n\n  useEffect(() => {\n    selectedIndex = 0;\n    setYearsList(data.map(el => el[0]));\n    setCurrentYear(data[0][0]);\n    setItems(data[0][1]);\n  }, [data]);\n\n  useEffect(() => {\n    setItems(data.find(el => el[0] === currentYear)[1]);\n  }, [currentYear]);\n\n  //......Navigation buttons...................................................................\n\n  const btnLeft = async () => {\n    selectedIndex =\n      (await selectedIndex) === 0 ? yearsList.length - 1 : selectedIndex - 1;\n    if (yearsList[selectedIndex] === undefined) {\n      return setCurrentYear(yearsList[0]);\n    } else await setCurrentYear(yearsList[selectedIndex]);\n    return;\n  };\n\n  const btnRight = async () => {\n    selectedIndex =\n      (await selectedIndex) === yearsList.length - 1 ? 0 : selectedIndex + 1;\n    if (yearsList[selectedIndex] === undefined) {\n      return setCurrentYear(yearsList[0]);\n    } else await setCurrentYear(yearsList[selectedIndex]);\n    return;\n  };\n\n  //.........................................................................\n\n  return (\n    <div className={s.summaryContainer}>\n      <div className={s.transactionTypeBox}>\n        <button className={s.btnNext} onClick={btnRight}>\n          <SvgGenerator name=\"Vector left\" />\n        </button>\n\n        <p className={s.textYear}>{currentYear}</p>\n        <button className={s.btnNext} onClick={btnLeft}>\n          <SvgGenerator name=\"Vector right\" />\n        </button>\n      </div>\n\n      <ul className={s.list}>\n        {items.map(item => (\n          <li key={item[0]} className={s.item}>\n            <span className={s.spanMonth}>{item[0]}</span>\n            {location.pathname === '/transactions/expenses' ? (\n              <span className={s.spanAmount}>- {item[1]}</span>\n            ) : (\n              <span className={s.spanAmount}>+ {item[1]}</span>\n            )}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nconst mapStateToProps = state => ({\n  summaryExpenses: getSummaryExpenses(state),\n  summaryIncomes: getSummaryIncomes(state),\n});\n\nexport default connect(mapStateToProps)(Summary);\n","// extracted by mini-css-extract-plugin\nexport default {\"transactionsSection\":\"_transactionsView_transactionsSection__A2dL6\",\"navigation\":\"_transactionsView_navigation__rq6cj\",\"navLink\":\"_transactionsView_navLink__OX1TY\",\"transactionsContainer\":\"_transactionsView_transactionsContainer__qFMm4\"};","import { Route, NavLink, Routes, Outlet } from 'react-router-dom';\nimport { lazy } from 'react';\nimport { connect } from 'react-redux';\n\nimport {\n  deleteExpense,\n  deleteIncome,\n} from '../../../redux/transactions/transaction-operations';\nimport {\n  getExpenses,\n  getIncomes,\n  getSummaryExpenses,\n  getSummaryIncomes,\n} from '../../../redux/transactions/transaction-selectors';\n\nimport TransactionForm from '../form/Form';\nimport Summary from '../summary/Summary';\nimport s from './_transactionsView.module.scss';\n\n//....................................................................\n\nconst TransactionsList = lazy(() =>\n  import('../transactionsList/TransactionsList'),\n);\n\n//.....................................................................\n\nfunction TransactionsView({\n  expenses,\n  incomes,\n  onDeleteExpense,\n  onDeleteIncome,\n  summaryExpenses,\n  summaryIncomes,\n}) {\n  return (\n    <>\n      <nav className={s.navigation}>\n        <NavLink\n          to=\"/transactions/expenses\"\n          className={s.navLink}\n          style={({ isActive }) => ({\n            boxShadow: isActive ? null : 'none',\n            color: isActive ? '#886aff' : '#79819c',\n          })}\n        >\n          EXPENSES\n        </NavLink>\n        <NavLink\n          to=\"/transactions/incomes\"\n          className={s.navLink}\n          style={({ isActive }) => ({\n            boxShadow: isActive ? null : 'none',\n            color: isActive ? '#886aff' : '#79819c',\n          })}\n        >\n          INCOMES\n        </NavLink>\n      </nav>\n\n      <section className={s.transactionsSection}>\n        <TransactionForm />\n        <div className={s.transactionsContainer}>\n          <Outlet />\n          <Routes>\n            <Route\n              path=\"/expenses\"\n              exact\n              element={\n                <>\n                  <TransactionsList\n                    data={expenses}\n                    onDelete={onDeleteExpense}\n                  />\n                  {summaryExpenses.length > 0 ? (\n                    <Summary data={summaryExpenses} />\n                  ) : null}\n                </>\n              }\n            />\n\n            <Route\n              path=\"/incomes\"\n              exact\n              element={\n                <>\n                  <TransactionsList data={incomes} onDelete={onDeleteIncome} />\n                  {summaryIncomes.length > 0 ? (\n                    <Summary data={summaryIncomes} />\n                  ) : null}\n                </>\n              }\n            />\n          </Routes>\n        </div>\n      </section>\n    </>\n  );\n}\n\nconst mapStateToProps = state => ({\n  expenses: getExpenses(state),\n  incomes: getIncomes(state),\n  summaryExpenses: getSummaryExpenses(state),\n  summaryIncomes: getSummaryIncomes(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onDeleteExpense: data => {\n    return dispatch(deleteExpense(data));\n  },\n  onDeleteIncome: data => {\n    return dispatch(deleteIncome(data));\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TransactionsView);\n","// extracted by mini-css-extract-plugin\nexport default {\"linkToReports\":\"_transactionsPage_linkToReports__GVXCx\",\"transactions__section\":\"_transactionsPage_transactions__section__bp1Em\",\"transactionsView__container\":\"_transactionsPage_transactionsView__container__bm1R4\",\"balance__container\":\"_transactionsPage_balance__container__5l52v\"};","import { Link, useLocation, useNavigate } from 'react-router-dom';\nimport { useEffect, useRef } from 'react';\nimport { connect } from 'react-redux';\n\nimport {\n  fetchTransactions,\n  fetchSummaryList,\n} from '../../../redux/transactions/transaction-operations';\nimport { getIsAuthenticated } from '../../../redux/auth/auth-selectors';\nimport { getLoadingStatus } from '../../../redux/user/user-selectors';\n\nimport TransactionsView from '../transactionsView/TransactionsView';\nimport Balance from '../../balance/Balance';\nimport SvgGenerator from '../../svg-generator/SvgGenerator';\nimport Loader from '../../loader/Loader';\n\nimport s from './_transactionsPage.module.scss';\nimport '../../../App.scss';\n\nfunction TransactionsPage({\n  isAuthenticated,\n  fetchSummaryList,\n  fetchTransactionsList,\n  loading,\n}) {\n  const location = useLocation();\n  const isFirstRender = useRef(true);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (!isAuthenticated) {\n      return navigate('/login', { replace: true });\n    }\n    if (isFirstRender.current) {\n      fetchTransactionsList();\n      fetchSummaryList();\n      isFirstRender.current = false;\n    }\n    return;\n  }, [isAuthenticated]);\n\n  useEffect(() => {\n    localStorage.setItem('lastTab', location.pathname);\n  }, [location]);\n\n  return (\n    <section className={s.transactions__section}>\n      <div className={s.balance__container}>\n        <Balance />\n        <Link to=\"/reports\" className={s.linkToReports}>\n          Reports\n          <SvgGenerator name=\"reports icon\" />\n        </Link>\n      </div>\n\n      <div className={s.transactionsView__container}>\n        {loading ? <Loader /> : <TransactionsView />}\n      </div>\n    </section>\n  );\n}\n\nconst mapStateToProps = state => ({\n  loading: getLoadingStatus(state),\n  isAuthenticated: getIsAuthenticated(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchTransactionsList: () => {\n    return dispatch(fetchTransactions());\n  },\n  fetchSummaryList: () => {\n    return dispatch(fetchSummaryList());\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TransactionsPage);\n"],"names":["connect","state","userId","getUserId","currentBalance","getBalance","dispatch","sendData","data","updateBalance","_ref","_useState","useState","_useState2","_slicedToArray","balance","setBalance","handleSubmit","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","event","wrap","_context","prev","next","preventDefault","id","Toastify","updateBalanceSuccess","showToast","stop","_x","apply","arguments","useEffect","_jsxs","className","s","onSubmit","children","_jsx","name","value","placeholder","onChange","target","axios","getExpenses","transactions","expenses","getIncomes","incomes","getSummaryExpenses","summaryExpenses","getSummaryIncomes","summaryIncomes","expensesList","incomesList","sendDataExpense","addExpenseRequest","transaction","description","category","amount","Number","date","then","addExpenseSuccess","catch","error","addExpenseError","addTransactionExpense","sendDataIncome","addIncomeRequest","addIncomeSuccess","addIncomeError","addTransactionIncome","setDescription","_useState3","_useState4","setCategory","_useState5","_useState6","setAmount","_useState7","_useState8","setDate","location","useLocation","handleChange","_event$target","submitForm","sent","pathname","clearForm","LocalizationProvider","dateAdapter","AdapterDateFns","Box","DatePicker","label","newValue","renderInput","_ref3","inputRef","inputProps","InputProps","sx","display","alignItems","_objectSpread","ref","required","endAdornment","type","autoComplete","maxLength","multiple","map","el","onClick","selectedIndex","yearsList","setYearsList","currentYear","setCurrentYear","items","setItems","find","btnLeft","t0","t1","length","undefined","abrupt","btnRight","_callee2","_context2","t2","SvgGenerator","item","TransactionsList","lazy","onDeleteExpense","deleteExpenseRequest","concat","_ref7","deleteExpenseSuccess","deleteExpenseError","onDeleteIncome","deleteIncomeRequest","_ref8","deleteIncomeSuccess","deleteIncomeError","_Fragment","NavLink","to","style","isActive","boxShadow","color","TransactionForm","Outlet","Routes","Route","path","exact","element","onDelete","Summary","loading","getLoadingStatus","isAuthenticated","getIsAuthenticated","fetchTransactionsList","fetchTransactionsRequest","_ref4","fetchTransactionsSuccess","fetchTransactionsError","fetchSummaryList","_ref5","fetchSummaryRequest","_ref6","fetchSummarySuccess","fetchSummaryError","_x2","isFirstRender","useRef","navigate","useNavigate","replace","current","localStorage","setItem","Balance","Link","Loader","TransactionsView"],"sourceRoot":""}